# ========================
# Clash-ALL 优化配置
# ========================

# 机场节点订阅

proxy-providers:

  cordCloud:
    url: http://192.168.3.6:3001/T3B9dgzBzdRbBF8Aqx7P/download/cordCloud
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 555
    proxy: 直连

  红杏:
    url: http://192.168.3.6:3001/T3B9dgzBzdRbBF8Aqx7P/download/%E7%BA%A2%E6%9D%8FME
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 555
    proxy: 直连

  硅谷云:
    url: http://192.168.3.6:3001/T3B9dgzBzdRbBF8Aqx7P/download/%E7%A1%85%E8%B0%B7%E4%BA%91A
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 555
    proxy: 直连

  流量光:
    url: http://192.168.3.6:3001/T3B9dgzBzdRbBF8Aqx7P/download/%E6%B5%81%E9%87%8F%E5%85%89
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 555
    proxy: 直连

  猫2云:
    url: http://192.168.3.6:3001/T3B9dgzBzdRbBF8Aqx7P/download/%E7%8C%AB2%E4%BA%91
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 555
    proxy: 直连

proxies:
  - {name: 直连, type: direct}
  - {name: 拒绝, type: reject}


# 全局配置
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 控制面板，external-ui 路径如果出现报错，根据你使用的插件进行调整，比如openclash改为： /etc/openclash/run  ，裸核跑改为/etc/mihomo/run
# 因容易造成新手面板启动问题，我注释掉了，需要的自行开启
external-controller: 0.0.0.0:9090
secret: ""
external-ui: "/etc/nikki/run"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"
    - "+.163.com"
    - "+.baidu.com"
    - "+.qq.com"


# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - '+.lan'
    - "+.local"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "+.market.xiaomi.com"
    - "+.ipw.cn"
  default-nameserver:
    - 223.5.5.5
    - 219.141.136.10
    - 219.141.140.10
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
    - 219.141.136.10
    - 219.141.140.10
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 219.141.136.10
    - 219.141.140.10
    - 223.5.5.5

# 入站
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# ========================
# 策略组定义
# ========================
default: &default
  type: select
  proxies:
    - 直连
    - 所有-故转
    - 香港-故转
    - 台湾-故转
    - 美国-故转
    - 日本-故转
    - 新韩-故转
    - 其他-故转
    - 所有-自动
    - 香港-自动
    - 台湾-自动
    - 美国-自动
    - 日本-自动
    - 新韩-自动
    - 其他-自动
    - 所有-手动
    - 香港-手动
    - 台湾-手动
    - 美国-手动
    - 日本-手动
    - 新韩-手动
    - 其他-手动
    - 拒绝

proxy-groups:

  # 业务分流组
  - {name: ChatGPT, <<: *default}
  - {name: Gemini, <<: *default}
  - {name: Claude, <<: *default}
  - {name: Meta AI, <<: *default}
  - {name: Perplexity, <<: *default}
  - {name: GitHub, <<: *default}
  - {name: Telegram, <<: *default}
  - {name: YouTube, <<: *default}
  - {name: Google, <<: *default}
  - {name: EMBY, <<: *default}
  - {name: Netflix, <<: *default}
  - {name: Microsoft, <<: *default}
  - {name: 国外, <<: *default}
  - {name: 其他, <<: *default}

  # ALL
  - name: 所有-故转
    type: fallback
    url: 'https://www.gstatic.com/generate_204'
    interval: 300
    lazy: false
    proxies:
      - 所有-智选
      - 所有-自动
      - 所有-手动

  # 香港组
  - name: 香港-故转
    type: fallback
    url: 'https://www.gstatic.com/generate_204'
    interval: 300
    lazy: false
    proxies:
      - 香港-智选
      - 香港-自动
      - 香港-手动

  # 台湾组
  - name: 台湾-故转
    type: fallback
    url: 'https://www.gstatic.com/generate_204'
    interval: 300
    lazy: false
    proxies:
      - 台湾-智选
      - 台湾-自动
      - 台湾-手动

  # 美国组
  - name: 美国-故转
    type: fallback
    url: 'https://www.gstatic.com/generate_204'
    interval: 300
    lazy: false
    proxies:
      - 美国-智选
      - 美国-自动
      - 美国-手动

  # 日本组
  - name: 日本-故转
    type: fallback
    url: 'https://www.gstatic.com/generate_204'
    interval: 300
    lazy: false
    proxies:
      - 日本-智选
      - 日本-自动
      - 日本-手动

  # 新韩
  - name: 新韩-故转
    type: fallback
    url: 'https://www.gstatic.com/generate_204'
    interval: 300
    lazy: false
    proxies:
      - 新韩-智选
      - 新韩-自动
      - 新韩-手动

  # 其他组
  - name: 其他-故转
    type: fallback
    url: 'https://www.gstatic.com/generate_204'
    interval: 300
    lazy: false
    proxies:
      - 其他-智选
      - 其他-自动
      - 其他-手动

  - name: 所有-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 333
    filter: "^((?!(直连|拒绝|剩余|官网|订阅|免费|异常|流量)).)*$"
    strategy: sticky-sessions

  - name: 所有-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 333
    url: http://www.gstatic.com/generate_204
    filter: "^((?!(直连|拒绝|剩余|官网|订阅|免费|异常|流量)).)*$"

  - name: 所有-手动
    type: select
    include-all: true
    filter: "^((?!(直连|拒绝|剩余|官网|订阅|免费|异常|流量)).)*$"

  # 香港组
  - name: 香港-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 333
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong|澳门)).*$"
    url: "http://www.gstatic.com/generate_204"
    strategy: sticky-sessions

  - name: 香港-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 333
    url: http://www.gstatic.com/generate_204
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong|澳门)).*$"

  - name: 香港-手动
    type: select
    include-all: true
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong|澳门)).*$"

  # 台湾组
  - name: 台湾-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 333
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)).*$"
    url: "http://www.gstatic.com/generate_204"
    strategy: sticky-sessions

  # 台湾组
  - name: 台湾-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 333
    url: http://www.gstatic.com/generate_204
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)).*$"

  - name: 台湾-手动
    type: select
    include-all: true
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)).*$"

  # 美国组
  - name: 美国-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 333
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)).*$"
    url: "http://www.gstatic.com/generate_204"
    strategy: sticky-sessions

  # 美国组
  - name: 美国-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 333
    url: http://www.gstatic.com/generate_204
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)).*$"

  - name: 美国-手动
    type: select
    include-all: true
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)).*$"

  # 日本组
  - name: 日本-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 333
    filter: "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)).*$"
    url: "http://www.gstatic.com/generate_204"
    strategy: sticky-sessions

  # 日本组
  - name: 日本-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 333
    url: http://www.gstatic.com/generate_204
    filter: "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)).*$"

  - name: 日本-手动
    type: select
    include-all: true
    filter: "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)).*$"

  # 新加坡组
  - name: 新韩-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 333
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea)).*$"
    url: "http://www.gstatic.com/generate_204"
    strategy: sticky-sessions

  # 新加坡组
  - name: 新韩-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 333
    url: http://www.gstatic.com/generate_204
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea)).*$"

  - name: 新韩-手动
    type: select
    include-all: true
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea)).*$"

  # 其他组
  - name: 其他-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    filter: "^((?!(直连|拒绝|剩余|官网|订阅|免费|异常|流量|广港|香港|深港|HK|Hong Kong|🇭🇰|HongKong|澳门|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States|🇬🇧)).)*$"
    strategy: sticky-sessions

  # 其他组
  - name: 其他-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 333
    url: http://www.gstatic.com/generate_204
    filter: "^((?!(直连|拒绝|剩余|官网|订阅|免费|异常|流量|广港|香港|深港|HK|Hong Kong|🇭🇰|HongKong|澳门|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States|🇬🇧)).)*$"

  - name: 其他-手动
    type: select
    include-all: true
    filter: "^((?!(直连|拒绝|剩余|官网|订阅|免费|异常|流量|广港|香港|深港|HK|Hong Kong|🇭🇰|HongKong|澳门|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States|🇬🇧)).)*$"

# ========================
# 规则引擎（rules）
# ========================
rules:
  - RULE-SET,private_domain,直连
  - RULE-SET,AppleCN_Domain,直连
  - RULE-SET,EMBY_Domain,EMBY
  - RULE-SET,EMBY_IP,EMBY,no-resolve
  - RULE-SET,ChatGPT_Domain,ChatGPT
  - RULE-SET,Gemini_Domain,Gemini
  - RULE-SET,Claude_Domain,Claude
  - RULE-SET,Meta_AI_Domain,Meta AI
  - RULE-SET,Facebook_Domain,Meta AI
  - RULE-SET,Perplexity_Domain,Perplexity
  - RULE-SET,Youtube_Domain,YouTube
  - RULE-SET,Google_Domain,Google
  - RULE-SET,Google_IP,Google,no-resolve
  - RULE-SET,GitHub_Domain,GitHub
  - RULE-SET,Telegram_Domain,Telegram
  - RULE-SET,Telegram_IP,Telegram,no-resolve
  - RULE-SET,Microsoft_Domain,Microsoft
  - RULE-SET,Netflix_Domain,Netflix
  - RULE-SET,Netflix_IP,Netflix,no-resolve
  - RULE-SET,Disney_Domain,Netflix
  - RULE-SET,HBO_Domain,Netflix
  - RULE-SET,speedtest_domain,国外
  - RULE-SET,Cloudflare_domain,国外
  - RULE-SET,Proxy0_Domain,国外
  - RULE-SET,Proxy1_Domain,国外
  - RULE-SET,Proxy2_Domain,国外
  - MATCH,其他

# ========================
# 规则集提供者
# ========================
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  EMBY_Domain: {<<: *class, url: "https://raw.githubusercontent.com/ShuaichenLau/clashConfig/refs/heads/main/EmbyCustom.list"}
  EMBY_IP: {<<: *ip, url: "https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/IP/emby-ip.mrs"}
  Google_Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  Gemini_Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google-gemini.mrs"}
  Google_IP: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  Meta_AI_Domain: {<<: *class, url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/MetaAi.list"}
  ChatGPT_Domain: {<<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/openai.mrs"}
  Claude_Domain: {<<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Claude/Claude.list"}
  Perplexity_Domain: {<<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/perplexity.mrs"}
  GitHub_Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  Telegram_Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  Telegram_IP: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  Microsoft_Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  Youtube_Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  Netflix_Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  Netflix_IP: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  Disney_Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/disney.mrs"}
  HBO_Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/hbo.mrs"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs" }
  Cloudflare_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/cloudflare.mrs" }
  Proxy0_Domain: {<<: *class, url: "https://raw.githubusercontent.com/ShuaichenLau/clashConfig/refs/heads/main/Check.list"}
  Proxy1_Domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/debian.mrs" }
  Proxy2_Domain: {<<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Proxy/Proxy.list"}
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  AppleCN_Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple-cn.mrs"}
  Facebook_Domain: {<<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/facebook.mrs"}

