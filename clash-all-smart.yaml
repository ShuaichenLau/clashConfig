# ========================
# Clash-ALL 优化配置
# ========================

# 机场节点订阅

proxy-providers:

  红杏:
    url: http://192.168.3.6:3001/T3B9dgzBzdRbBF8Aqx7P/download/%E7%BA%A2%E6%9D%8FME
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    override:
      # additional-prefix: '红杏-'
      skip-cert-verify: true
      udp: true
    proxy: 直连

  CCSUB:
    url: http://192.168.3.6:3001/T3B9dgzBzdRbBF8Aqx7P/download/CCSUB
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    override:
      # additional-prefix: 'CCSUB-'
      skip-cert-verify: true
      udp: true
    proxy: 直连

  硅谷云:
    url: http://192.168.3.6:3001/T3B9dgzBzdRbBF8Aqx7P/download/%E7%A1%85%E8%B0%B7%E4%BA%91A
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    override:
      # additional-prefix: '硅谷云-'
      skip-cert-verify: true
      udp: true
    proxy: 直连

  流量光:
    url: http://192.168.3.6:3001/T3B9dgzBzdRbBF8Aqx7P/download/%E6%B5%81%E9%87%8F%E5%85%89
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    override:
      # additional-prefix: '流量光-'
      skip-cert-verify: true
      udp: true
    proxy: 直连

  猫2云:
    url: http://192.168.3.6:3001/T3B9dgzBzdRbBF8Aqx7P/download/%E7%8C%AB2%E4%BA%91
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    override:
      # additional-prefix: '猫2云-'
      skip-cert-verify: true
      udp: true
    proxy: 直连

  NB:
    url: http://192.168.3.6:3001/T3B9dgzBzdRbBF8Aqx7P/download/NB
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

proxies:
  - {name: 直连, type: direct}
  - {name: 拒绝, type: reject}

# ========================
# 主要端口设置
# ========================
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895

allow-lan: true
mode: rule
log-level: info

geodata-mode: false
# GEO 文件加载模式（standard：标准加载器/memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 48
geox-url:
  geosite: "https://github.moeyy.xyz/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://github.moeyy.xyz/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.metadb"
  geoip: "https://github.moeyy.xyz/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  asn: "https://github.moeyy.xyz/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"

external-controller: 0.0.0.0:9090
# external-ui: ui
# external-ui-name: zashboard
# external-ui-url: https://github.moeyy.xyz/https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip
secret: "123456"

# ========================
# DNS 设置
# ========================
dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: true
  prefer-h3: true # 是否开启 DoH 支持 HTTP/3，将并发尝试
  enhanced-mode: fake-ip
  fake-ip-range: 198.20.0.1/16
  nameserver:
    - 219.141.140.10
    - 219.141.136.10
    - 223.5.5.5
    - quic://dns.alidns.com/dns-query
    - https://sm2.doh.pub/dns-query
  fake-ip-filter:
    - +.lan
    - +.local
    - geosite:cn
    # 快猫
    - +.quickcht3.club
    - +.kuaimao2.club
    - +.llgjc1.com
    # 火烧
    - +.onesubv.site
    - +.oneyyds.online
    - +.fengyyds.site
    - +.onemg.top
    # 猫耳
    - +.zhunchuanpb.com
    - +.sevenka.top
    # BestVPN
    - +.networklinkpro.net
    - +.prosubnet02.eu
    # 小牛
    - +.4yfu73r3a4kl.com
    - +.xiaoniuyun.cc
    # 硅谷
    - +.huawei-cloud.shop
    - +.huawei-cloud.vip
    - +.gpt-agent.cc
    # 无界
    - +.acwct.cn
    - +.472361.xyz
    # 冰云
    - +.bingyun.ink
    - +.fafhjkah.xyz
    # 牛逼
    - +.66jc.top
    - +.jueduibupao.top
    - +.qeayr.cn
    - +.saojc.xyz
    - +.sssyun.xyz
    - +.dler.cloud
    - +.0tk8a3a1q4t94dler.com
    - +.aerianas.top

ipv6: true

# ========================
# TUN 模块
# ========================
tun:
  enable: true
  stack: gvisor
  device: utun
  endpoint-independent-nat: true
  auto-route: false
  auto-detect-interface: false
  auto-redirect: false
  strict-route: false

profile:
  store-selected: true
  store-fake-ip: true

# ========================
# 策略组定义
# ========================
default: &default
  type: select
  proxies:
    - 直连
    - 所有-手选A
    - 所有-手选B
    - 所有-智选
    - 香港-智选
    - 台湾-智选
    - 日本-智选
    - 新韩-智选
    - 美国-智选
    - 其他-智选
    - 香港-自动
    - 台湾-自动
    - 日本-自动
    - 新韩-自动
    - 美国-自动
    - 其他-自动
    - 拒绝

proxy-groups:

  # 业务分流组
  - {name: ChatGPT, <<: *default}
  - {name: Claude, <<: *default}
  - {name: Meta AI, <<: *default}
  - {name: Perplexity, <<: *default}
  - {name: GitHub, <<: *default}
  - {name: Telegram, <<: *default}
  - {name: YouTube, <<: *default}
  - {name: Disney, <<: *default}
  - {name: Netflix, <<: *default}
  - {name: 哔哩哔哩, <<: *default, icon: "https://pub-8feead0908f649a8b94397f152fb9cba.r2.dev/bilibili.png"}
  - {name: EMBY, <<: *default, icon: "https://pub-8feead0908f649a8b94397f152fb9cba.r2.dev/emby.png"}
  - {name: HBO, <<: *default}
  - {name: Spotify, <<: *default}
  - {name: Amazon, <<: *default}
  - {name: Apple, <<: *default}
  - {name: Microsoft, <<: *default}
  - {name: Google, <<: *default}
  - {name: Crypto, <<: *default}
  - {name: 国外, <<: *default}
  - {name: 国内, <<: *default}
  - {name: 其他, <<: *default}

  - name: 所有-手选A
    type: select
    include-all: true
    filter: "^((?!(直连|拒绝|剩余|官网|订阅|免费|异常|流量)).)*$"

  - name: 所有-手选B
    type: select
    include-all: true
    filter: "^((?!(直连|拒绝|剩余|官网|订阅|免费|异常|流量)).)*$"


  - name: 所有-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "^((?!(直连|拒绝|剩余|官网|订阅|免费|异常|流量)).)*$"

  # 香港组
  - name: 香港-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong)).*$"
    url: "http://www.gstatic.com/generate_204"
    lazy: true
    persistent: true

  # 台湾组
  - name: 台湾-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)).*$"
    url: "http://www.gstatic.com/generate_204"
    lazy: true
    persistent: true

  # 日本组
  - name: 日本-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)).*$"
    url: "http://www.gstatic.com/generate_204"
    lazy: true
    persistent: true

  # 新加坡组
  - name: 新韩-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea)).*$"
    url: "http://www.gstatic.com/generate_204"
    lazy: true
    persistent: true


  # 美国组
  - name: 美国-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)).*$"
    url: "http://www.gstatic.com/generate_204"
    lazy: true
    persistent: true

  # 其他组
  - name: 其他-智选
    type: smart
    include-all: true
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "^((?!(直连|拒绝|广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States|🇬🇧)).)*$"
    url: "http://www.gstatic.com/generate_204"
    lazy: true
    persistent: true

  - name: 香港-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 300
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong)).*$"

  # 台湾组
  - name: 台湾-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 300
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)).*$"


  # 日本组
  - name: 日本-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 300
    filter: "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)).*$"

  # 新加坡组
  - name: 新韩-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 300
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea)).*$"

  # 美国组
  - name: 美国-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 300
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)).*$"

  # 其他组
  - name: 其他-自动
    type: url-test
    include-all: true
    tolerance: 20
    interval: 300
    filter: "^((?!(直连|拒绝|剩余|官网|订阅|免费|异常|流量|广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States|🇬🇧)).)*$"


# ========================
# 规则引擎（rules）
# ========================
rules:

  - RULE-SET,EMBY / Domain,EMBY
  - RULE-SET,ChatGPT / Domain,ChatGPT
  - RULE-SET,Claude / Domain,Claude
  - RULE-SET,Meta AI / Domain,Meta AI
  - RULE-SET,Perplexity / Domain,Perplexity
  - RULE-SET,GitHub / Domain,GitHub
  - RULE-SET,Telegram / Domain,Telegram
  - RULE-SET,Telegram / IP,Telegram,no-resolve
  - RULE-SET,Amazon / Domain,Amazon
  - RULE-SET,Apple / Domain,Apple
  - RULE-SET,Apple-CN / Domain,Apple
  - RULE-SET,biliintl1 / Domain,哔哩哔哩
  - RULE-SET,biliintl2 / Domain,哔哩哔哩
  - RULE-SET,biliintl / IP,哔哩哔哩,no-resolve
  - RULE-SET,TikTok / Domain,哔哩哔哩
  - RULE-SET,Microsoft / Domain,Microsoft
  - RULE-SET,Twitter / Domain,Microsoft
  - RULE-SET,Facebook / Domain,Microsoft
  - RULE-SET,OKX / Domain,Crypto
  - RULE-SET,Bybit / Domain,Crypto
  - RULE-SET,Binance / Domain,Crypto
  - RULE-SET,Youtube / Domain,YouTube
  - RULE-SET,Netflix / Domain,Netflix
  - RULE-SET,Netflix / IP,Netflix,no-resolve
  - RULE-SET,Disney / Domain,Disney
  - RULE-SET,HBO / Domain,HBO
  - RULE-SET,Spotify / Domain,Spotify
  - RULE-SET,Google / Domain,Google
  - RULE-SET,Google / IP,Google,no-resolve
  - RULE-SET,Proxy / Domain,国外
  - RULE-SET,Proxy1 / Domain,国外
  - RULE-SET,Proxy2 / Domain,国外
  - RULE-SET,Direct / Domain,国内
  - RULE-SET,China / Domain,国内
  - RULE-SET,China / IP,国内,no-resolve
  - MATCH,其他

# ========================
# 规则集提供者
# ========================
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  EMBY / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/ShuaichenLau/clashConfig/refs/heads/main/EmbyCustom.list"}
  EMBY / IP: {<<: *ip, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/IP/emby-ip.mrs"}
  Google / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  Google / IP: {<<: *ip, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  Meta AI / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/MetaAi.list"}
  biliintl1 / Domain: { <<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/bilibili%40!cn.mrs" }
  biliintl2 / Domain: { <<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/bilibili.mrs" }
  biliintl / IP: { <<: *ip, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo-lite/geoip/bilibili.mrs" }
  ChatGPT / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/openai.mrs"}
  Claude / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Claude/Claude.list"}
  Perplexity / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/perplexity.mrs"}
  GitHub / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  Telegram / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  Telegram / IP: {<<: *ip, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  Twitter / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/x.mrs"}
  Facebook / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/facebook.mrs"}
  Amazon / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/amazon.mrs"}
  Apple-CN / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  Apple / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"}
  Microsoft / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  OKX / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/okx.mrs"}
  Bybit / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bybit.mrs"}
  Binance / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/binance.mrs"}
  Youtube / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  TikTok / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  Netflix / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  Netflix / IP: {<<: *ip, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  Disney / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/disney.mrs"}
  HBO / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/hbo.mrs"}
  Spotify / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"}
  Proxy / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Proxy/Proxy.list"}
  Proxy1 / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Proxy.list"}
  Proxy2 / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/ShuaichenLau/clashConfig/refs/heads/main/Check.list"}
  China / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  China / IP: {<<: *ip, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  Direct / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/ShuaichenLau/clashConfig/refs/heads/main/Direct.list"}

#  Private / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
#  Globe / Domain: {<<: *class, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global.list"}
#  GateFireWall / Domain: {<<: *domain, url: "https://github.moeyy.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}